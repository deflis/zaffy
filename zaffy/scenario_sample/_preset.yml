
# action と同じ形式にすべきか
- action: preset.http
  default:
    assert:
      - res.status == 200

# preset 専用の形式にすべきか
http:
  default:
    assert:
      - res.status == 200
  assert400:
    assert:
      - res.status == 400

# もう一点。preset を使う方法
# 同じキーの値が数値・文字列なら上書き←問題なさそう
# 同じキーの値が list なら extend でマージ？まるごと上書き？
# 同じキーの値が dict なら update でマージ？まるごと上書き？
- action: http.get +assert400 # +を付けるとマージ(default), *を付けると上書きとかどうだろう、何も付けないと各アクションのdefault presetが使用される
  assert:
    - res.content == "hoge"

# 階層構造についての案
# test_scenario/
#   preset/
#     http1.yml
#   api1_test/
#     preset/
#       http2.yml
#     test1.yml
#   api2_test/
#     test2.yml
#
# 上記のような階層構造があった場合に、http1.ymlは全体に適用される
# http2.ymlは api1_test のなかにあるシナリオだけで使用できる
# test1.ymlでhttp2.ymlにしかない名前を参照した場合はそれがそのまま使用できる
# http1.ymlにしかない名前を参照した場合もそれが使用できる。
# 両方で重複した名前がある場合は http2.yml が優先される（マージとかはされない）

- action: preset.sql
  hoge_db:
    driver: mysql
    host: localhost
    db_name: test_user
    port: 3306
    user: ""
    password: ""
    sql : ""

